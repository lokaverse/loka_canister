type NFTContract = 
 record {
   LETBalance: nat;
   amount: nat;
   claimableBTC: nat;
   claimableLOM: nat;
   claimedBTC: nat;
   claimedLOM: nat;
   daysLeft: nat;
   duration: nat;
   electricityPerDay: nat;
   end: nat;
   hashrate: nat;
   id: nat;
   metadata: text;
   owner: text;
   start: nat;
 };
type MiningContract = 
 record {
   amount: nat;
   duration: nat;
   electricityPerDay: nat;
   end: nat;
   genesisId: nat;
   hashrate: nat;
   id: nat;
   start: nat;
 };
service : {
  claimBTC: () -> (nat);
  claimLOM: () -> (nat);
  distributeBTC: (nat, nat) -> (nat);
  distributeLOM: (nat) -> (nat);
  getContract: (nat) -> (MiningContract) query;
  getContractAmount: (nat) -> (text) query;
  getOwnedContracts: () -> (vec NFTContract) query;
  greet: () -> (text) query;
  mintContract: (nat, nat, nat, nat, nat, nat, nat) -> (nat);
  pauseContract: (bool) -> (bool);
  rechargeLET: (nat, nat) -> (nat);
}
